//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-19856038
// Cuda compilation tools, release 7.5, V7.5.17
// Based on LLVM 3.4svn
//

.version 4.3
.target sm_52
.address_size 64

	// .weak	cudaMalloc

.weak .func  (.param .b32 func_retval0) cudaMalloc(
	.param .b64 cudaMalloc_param_0,
	.param .b64 cudaMalloc_param_1
)
{
	.reg .b32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

	// .weak	cudaFuncGetAttributes
.weak .func  (.param .b32 func_retval0) cudaFuncGetAttributes(
	.param .b64 cudaFuncGetAttributes_param_0,
	.param .b64 cudaFuncGetAttributes_param_1
)
{
	.reg .b32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

	// .weak	cudaDeviceGetAttribute
.weak .func  (.param .b32 func_retval0) cudaDeviceGetAttribute(
	.param .b64 cudaDeviceGetAttribute_param_0,
	.param .b32 cudaDeviceGetAttribute_param_1,
	.param .b32 cudaDeviceGetAttribute_param_2
)
{
	.reg .b32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

	// .weak	cudaGetDevice
.weak .func  (.param .b32 func_retval0) cudaGetDevice(
	.param .b64 cudaGetDevice_param_0
)
{
	.reg .b32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

	// .weak	cudaOccupancyMaxActiveBlocksPerMultiprocessor
.weak .func  (.param .b32 func_retval0) cudaOccupancyMaxActiveBlocksPerMultiprocessor(
	.param .b64 cudaOccupancyMaxActiveBlocksPerMultiprocessor_param_0,
	.param .b64 cudaOccupancyMaxActiveBlocksPerMultiprocessor_param_1,
	.param .b32 cudaOccupancyMaxActiveBlocksPerMultiprocessor_param_2,
	.param .b64 cudaOccupancyMaxActiveBlocksPerMultiprocessor_param_3
)
{
	.reg .b32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

	// .weak	cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags
.weak .func  (.param .b32 func_retval0) cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags(
	.param .b64 cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags_param_0,
	.param .b64 cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags_param_1,
	.param .b32 cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags_param_2,
	.param .b64 cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags_param_3,
	.param .b32 cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags_param_4
)
{
	.reg .b32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

	// .globl	_Z16kernel_sgemv_v1aiiiPKfS0_Pf
.visible .entry _Z16kernel_sgemv_v1aiiiPKfS0_Pf(
	.param .u32 _Z16kernel_sgemv_v1aiiiPKfS0_Pf_param_0,
	.param .u32 _Z16kernel_sgemv_v1aiiiPKfS0_Pf_param_1,
	.param .u32 _Z16kernel_sgemv_v1aiiiPKfS0_Pf_param_2,
	.param .u64 _Z16kernel_sgemv_v1aiiiPKfS0_Pf_param_3,
	.param .u64 _Z16kernel_sgemv_v1aiiiPKfS0_Pf_param_4,
	.param .u64 _Z16kernel_sgemv_v1aiiiPKfS0_Pf_param_5
)
{
	.reg .pred 	%p<11>;
	.reg .f32 	%f<93>;
	.reg .b32 	%r<47>;
	.reg .b64 	%rd<17>;


	ld.param.u32 	%r7, [_Z16kernel_sgemv_v1aiiiPKfS0_Pf_param_1];
	ld.param.u32 	%r8, [_Z16kernel_sgemv_v1aiiiPKfS0_Pf_param_2];
	ld.param.u64 	%rd8, [_Z16kernel_sgemv_v1aiiiPKfS0_Pf_param_3];
	ld.param.u64 	%rd9, [_Z16kernel_sgemv_v1aiiiPKfS0_Pf_param_4];
	ld.param.u64 	%rd7, [_Z16kernel_sgemv_v1aiiiPKfS0_Pf_param_5];
	cvta.to.global.u64 	%rd1, %rd8;
	cvta.to.global.u64 	%rd2, %rd9;
	mov.u32 	%r10, %ntid.y;
	mov.u32 	%r11, %ctaid.y;
	mul24.lo.s32 	%r12, %r11, %r10;
	mov.u32 	%r13, %tid.y;
	add.s32 	%r14, %r12, %r13;
	shl.b32 	%r1, %r14, 1;
	mov.u32 	%r2, %tid.x;
	mul.lo.s32 	%r3, %r1, %r7;
	mov.f32 	%f90, 0f00000000;
	mov.f32 	%f85, %f90;
	mov.f32 	%f92, %f90;
	mov.f32 	%f87, %f90;
	mov.u32 	%r46, 0;
	setp.lt.s32	%p1, %r8, 1;
	@%p1 bra 	BB6_10;

BB6_1:
	mov.f32 	%f89, %f92;
	mov.f32 	%f91, %f89;
	mov.f32 	%f84, %f87;
	mov.f32 	%f86, %f84;
	shl.b32 	%r15, %r46, 7;
	add.s32 	%r5, %r15, %r2;
	add.s32 	%r16, %r5, 32;
	mul.wide.s32 	%rd10, %r5, 4;
	add.s64 	%rd3, %rd2, %rd10;
	add.s32 	%r17, %r5, %r3;
	mul.wide.s32 	%rd11, %r17, 4;
	add.s64 	%rd4, %rd1, %rd11;
	add.s32 	%r18, %r17, %r7;
	mul.wide.s32 	%rd12, %r18, 4;
	add.s64 	%rd5, %rd1, %rd12;
	setp.ge.s32	%p2, %r16, %r7;
	@%p2 bra 	BB6_3;

	ld.global.nc.f32 	%f80, [%rd3+128];
	ld.global.nc.f32 	%f81, [%rd4+128];
	ld.global.nc.f32 	%f82, [%rd5+128];

BB6_3:
	setp.ge.s32	%p3, %r5, %r7;
	@%p3 bra 	BB6_5;

	ld.global.nc.f32 	%f45, [%rd3];
	ld.global.nc.f32 	%f46, [%rd4];
	fma.rn.f32 	%f91, %f45, %f46, %f91;
	ld.global.nc.f32 	%f47, [%rd5];
	fma.rn.f32 	%f86, %f45, %f47, %f86;

BB6_5:
	add.s32 	%r19, %r5, 64;
	setp.ge.s32	%p4, %r19, %r7;
	@%p4 bra 	BB6_7;

	ld.global.nc.f32 	%f79, [%rd3+256];
	ld.global.nc.f32 	%f77, [%rd4+256];
	ld.global.nc.f32 	%f76, [%rd5+256];

BB6_7:
	setp.lt.s32	%p5, %r16, %r7;
	fma.rn.f32 	%f48, %f80, %f81, %f91;
	fma.rn.f32 	%f49, %f80, %f82, %f86;
	selp.f32	%f26, %f48, %f91, %p5;
	selp.f32	%f27, %f49, %f86, %p5;
	add.s32 	%r21, %r5, 96;
	setp.ge.s32	%p6, %r21, %r7;
	@%p6 bra 	BB6_9;

	ld.global.nc.f32 	%f78, [%rd3+384];
	ld.global.nc.f32 	%f81, [%rd4+384];
	ld.global.nc.f32 	%f82, [%rd5+384];

BB6_9:
	setp.lt.s32	%p7, %r21, %r7;
	setp.lt.s32	%p8, %r19, %r7;
	fma.rn.f32 	%f50, %f79, %f77, %f26;
	fma.rn.f32 	%f51, %f79, %f76, %f27;
	selp.f32	%f52, %f50, %f26, %p8;
	selp.f32	%f53, %f51, %f27, %p8;
	fma.rn.f32 	%f54, %f78, %f81, %f52;
	fma.rn.f32 	%f55, %f78, %f82, %f53;
	selp.f32	%f92, %f54, %f52, %p7;
	selp.f32	%f87, %f55, %f53, %p7;
	add.s32 	%r46, %r46, 1;
	setp.lt.s32	%p9, %r46, %r8;
	mov.f32 	%f85, %f87;
	mov.f32 	%f90, %f92;
	@%p9 bra 	BB6_1;

BB6_10:
	cvta.to.global.u64 	%rd6, %rd7;
	and.b32  	%r44, %r2, 31;
	mov.u32 	%r26, 16;
	mov.u32 	%r43, 31;
	// inline asm
	shfl.down.b32 %f56, %f90, %r26, %r43;
	// inline asm
	add.f32 	%f61, %f90, %f56;
	// inline asm
	shfl.down.b32 %f58, %f85, %r26, %r43;
	// inline asm
	add.f32 	%f63, %f85, %f58;
	mov.u32 	%r30, 8;
	// inline asm
	shfl.down.b32 %f60, %f61, %r30, %r43;
	// inline asm
	add.f32 	%f65, %f61, %f60;
	// inline asm
	shfl.down.b32 %f62, %f63, %r30, %r43;
	// inline asm
	add.f32 	%f67, %f63, %f62;
	mov.u32 	%r34, 4;
	// inline asm
	shfl.down.b32 %f64, %f65, %r34, %r43;
	// inline asm
	add.f32 	%f69, %f65, %f64;
	// inline asm
	shfl.down.b32 %f66, %f67, %r34, %r43;
	// inline asm
	add.f32 	%f71, %f67, %f66;
	mov.u32 	%r38, 2;
	// inline asm
	shfl.down.b32 %f68, %f69, %r38, %r43;
	// inline asm
	add.f32 	%f73, %f69, %f68;
	// inline asm
	shfl.down.b32 %f70, %f71, %r38, %r43;
	// inline asm
	add.f32 	%f75, %f71, %f70;
	mov.u32 	%r42, 1;
	// inline asm
	shfl.down.b32 %f72, %f73, %r42, %r43;
	// inline asm
	add.f32 	%f38, %f73, %f72;
	// inline asm
	shfl.down.b32 %f74, %f75, %r42, %r43;
	// inline asm
	add.f32 	%f39, %f75, %f74;
	setp.ne.s32	%p10, %r44, 0;
	@%p10 bra 	BB6_12;

	mul.wide.s32 	%rd13, %r1, 4;
	add.s64 	%rd14, %rd6, %rd13;
	st.global.f32 	[%rd14], %f38;
	add.s32 	%r45, %r1, 1;
	mul.wide.s32 	%rd15, %r45, 4;
	add.s64 	%rd16, %rd6, %rd15;
	st.global.f32 	[%rd16], %f39;

BB6_12:
	ret;
}


